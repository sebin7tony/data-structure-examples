package com.ds.tree;

import java.util.ArrayList;
import java.util.List;

public class Queue<T> {
	
	private List<T> queue;
	private int size;
	private int frontPointer;
	
	public Queue(int size) {
		
		if(size == 0){
			
			System.out.println("Queue cannot be made");
			return;
		}
		queue = new ArrayList<T>();
		this.size = size;
		this.frontPointer = 0;
	}
	
	public void enqueue(T tmp){
		
		if(frontPointer <= size){
			
			queue.add(tmp);
			frontPointer++;
		}
		
	}

	public T dequeue(){
		
		if(queue.size() != 0){
			
			T temp = queue.remove(0);
			return temp;
		}
		
		return null;	
	}
	
	public static void main(String[] args) {
		
		Queue<Integer> q = new Queue<Integer>(10);
		q.enqueue(12);
		q.enqueue(21);
		q.enqueue(31);
		q.enqueue(41);
		q.enqueue(54);
		q.enqueue(65);
	}
}
