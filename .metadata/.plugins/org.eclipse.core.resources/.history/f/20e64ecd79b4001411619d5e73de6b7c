package com.ds.tree;

public class LevelWisePrint {
	
	Tree tree;
	Queue<Node> queue;
	
	public LevelWisePrint() {
		
		tree = new Tree();
		
		tree.addNode(20, tree.getRoot());
		tree.addNode(8, tree.getRoot());
		tree.addNode(22, tree.getRoot());
		tree.addNode(25, tree.getRoot());
		tree.addNode(4, tree.getRoot());
		tree.addNode(12, tree.getRoot());
		tree.addNode(10, tree.getRoot());
		tree.addNode(14, tree.getRoot());
	}
	
	public void print(){
		
		Node dummy = new Node();
		dummy.setValue(-1);
		
		queue = new Queue<Node>(20);
		queue.enqueue(dummy);
		queue.enqueue(tree.getRoot());
		
		while(queue.isEmpty()){
			
			Node current = queue.dequeue();
			if(current.getValue() < 0){
				
				System.out.println("");
				queue.enqueue(dummy);
			}
			else{
				
				System.out.println(current.getValue()+" ");
				queue.enqueue(current.getLchild());
				queue.enqueue(current.getRchild());
			}
		}
		
		
	}
	
	public static void main(String[] args) {
		
		LevelWisePrint lp = new LevelWisePrint();
		lp.print();
	}
	

}
